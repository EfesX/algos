#include <iostream>
#include <algorithm> // Для использования функции max()

using namespace std;

int main() {
    // Чтение входного числа
    size_t n;
    cin >> n;
    
    // Если введено 0, сразу возвращаем 0 (так как все циклические сдвиги дадут 0)
    if (n == 0) {
        cout << 0 << endl;
        return 0;
    }

    // Находим позицию старшего бита (длину числа в битах минус 1)
    int len = 0;
    for (int i = 14; i >= 0; i--) { // Проверяем все 32 бита для size_t (32-битные системы)
        if (n & (1 << i)) {
            len = i;
            break;
        }
    }

    // Инициализируем максимум исходным числом
    int vmax = n;
    int mask = 0; // Маска для выделения младших битов

    // Перебираем все возможные сдвиги (от 0 до len)
    for (int i = 0; i <= len; i++) {
        // a - число, сдвинутое вправо на i битов (старшие биты)
        int a = n >> i;
        
        // b - младшие i битов, сдвинутые влево на (len+1-i) позиций
        int b = (n & mask) << (len + 1 - i);
        
        // Обновляем маску для выделения на один бит больше на следующей итерации
        mask = (mask << 1) | 1;
        
        // Вычисляем текущий вариант циклического сдвига и обновляем максимум
        vmax = max(vmax, (a | b));
    }

    // Выводим максимальное значение
    cout << vmax << endl;

    return 0;
}